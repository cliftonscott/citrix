{
  "name": "Citrix",
  "tagline": "A Laravel specific package for interacting with the Citrix API for GoToWebinar",
  "body": "# Citrix GotoWebinar API Provider for Laravel\r\n\r\nThis package is a Citrix GotoWebinar API service provider and facade for Laravel 5.1+. It was inspired by [Teodor Talov's Citrix API wrapper package](https://github.com/teodortalov/citrix).\r\n\r\n\r\n## Installing\r\n\r\nYou can use Composer to install the library\r\n\r\n```\r\ncomposer require slakbal/citrix\r\n```\r\n\r\nFind the `providers` array in the `config/app.php` file and add the following Service Provider:\r\n\r\n```php\r\n'providers' => [\r\n  // ...\r\n  Slakbal\\Citrix\\CitrixServiceProvider::class\r\n];\r\n```\r\n\r\nNow find the `aliases` array in the same config file and add the following Facade class:\r\n\r\n```php\r\n'aliases' => [\r\n  // ...\r\n  'GotoWebinar' => Slakbal\\Citrix\\Facade\\GotoWebinar::class\r\n];\r\n```\r\n\r\n\r\n\r\n## Config\r\n\r\nBefore you can use the Citrix service provider you have configure it. You can create API access keys here: [CITRIX Developer portal](https://developer.citrixonline.com/user/me/apps).\r\n\r\nNote that you need to have an active or trial account for the API to function properly. Just dev credentials alone will not work.\r\n\r\nThe provider currently only support `Direct` authentication. An OAuth2 authentication will be added later also.\r\n\r\nThe following environment values are required in your `.env` file. The provider doesn't publish any config, etc. thus your project stays clean.\r\n\r\n```\r\nCITRIX_DIRECT_USER=test@test.com\r\nCITRIX_DIRECT_PASSWORD=testpassword\r\nCITRIX_CONSUMER_KEY=123123123123\r\n```\r\n\r\n\r\n\r\n## Usage\r\n\r\n### Webinar Resource\r\n\r\n```php\r\n\r\n// Return list of all the Webinars\r\n$webinars = GotoWebinar::getAllWebinars();\r\n\r\n\r\n// Return the list of all upcoming Webinars\r\n$webinars = GotoWebinar::getUpcomingWebinars();\r\n\r\n\r\n// Return list of historical Webinars - date format standard: W3C - ISO 8601\r\n$dateRange = [  'fromTime' => \"2016-01-01T01:00:00Z\",\r\n                'toTime'   => \"2016-03-23T20:00:00Z\", ];\r\n\r\n$webinars = GotoWebinar::getHistoricalWebinars( $dateRange );\r\n\r\n\r\n// Return a specific Webinar\r\n$webinar = GotoWebinar::getWebinar( $webinarKey );\r\n\r\n\r\n// Create a Webinar - date format standard: W3C - ISO 8601\r\n$webinar = [ 'subject'     => 'API Test 2',\r\n             'description' => 'This Webinar is created via the API',\r\n             'startTime'   => \"2016-03-23T19:00:00Z\",\r\n             'endTime'     => \"2016-03-23T20:00:00Z\", ];\r\n\r\n$webinar = GotoWebinar::createWebinar( $webinar );\r\n\r\n\r\n// Update a Webinar - date format standard: W3C - ISO 8601\r\n$webinar = [ 'subject'     => 'API Test 2.2',\r\n             'description' => 'This Webinar is updated via the API',\r\n             'startTime'   => \"2016-03-24T19:00:00Z\",\r\n             'endTime'     => \"2016-03-24T20:00:00Z\", ];\r\n\r\n$webinar = GotoWebinar::updateWebinar( $webinarKey, $params, $sendNotification = true);\r\n\r\n\r\n// Delete a specific Webinar\r\n$result = GotoWebinar::deleteWebinar( $webinarKey, $sendNotification = true );\r\n```\r\n\r\n### Attendee and Registrant Resource\r\n\r\n```php\r\n// Return a list of attendees for a specific Webinar\r\n$attendees = GotoWebinar::getWebinarAttendees( $webinarKey );\r\n\r\n\r\n// Register an attendee for a specific Webinar\r\n$webinarKey = '7102152795910768396';\r\n\r\n$registrant = [ 'firstname'    => 'Peter',\r\n                'lastname'     => 'Pan',\r\n                'email'        => 'peter.pan@gmail.com',\r\n                'organization' => 'Neverland', ];\r\n\r\n$result = GotoWebinar::registerAttendee( $webinarKey, $registrant );\r\n\r\n\r\n// Return a list of registrants for a specific Webinar\r\n$registrants = GotoWebinar::getWebinarRegistrants( $webinarKey );\r\n\r\n\r\n// Return a specific registrant from a specific Webinar\r\n$registrant = GotoWebinar::getWebinarRegistrant( $webinarKey, $registrantKey );\r\n\r\n\r\n// Remove a specific registrant from a specific Webinar\r\n$result = GotoWebinar::deleteWebinarRegistrant( $webinarKey, $registrantKey );\r\n```\r\n\r\n### Session Resource\r\n\r\n```php\r\n// Return list of sessions for the Organizer ()\r\n$sessions = GotoWebinar::getOrganizerSessions();\r\n\r\n\r\n// Return list of attendees for a specific Webinar and specific session\r\n$attendees = GotoWebinar::getWebinarSessionAttendees( $webinarKey, $sessionKey );\r\n\r\n\r\n// Return a specific attendee for a specific Webinar and specific session\r\n$attendee = GotoWebinar::getWebinarSessionAttendee( $webinarKey, $sessionKey, $registrantKey );\r\n```\r\n\r\nYour contribution or bug fixes are welcome!\r\n\r\nNext steps will be to build out more robuster error handling, add OAuth2 Authentication and adding the GotoMeeting provider into the package also.\r\n\r\nEnjoy!\r\n\r\nSlakkie\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}